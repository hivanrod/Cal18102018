@model IEnumerable<Calendario2.Models.Tema>
@{
    ViewBag.Title = "Hoy Calendario Xcursor";
    var i = 0;
}
<div class="container text-center">
    <h2>@ViewBag.Title</h2>
</div>
<div class="container table-responsive">

    <div class="row table-bordered">
        <div class="col-md-2 text-center">
            <h3>
                @Html.ActionLink(" ", "Hoy", "Temas", new { @Fecha = ViewBag.fecha1.Year + "-" + ViewBag.fecha1.Month + "-" + ViewBag.fecha1.Day }, new { @class = "glyphicon glyphicon-backward" })
                @ViewBag.dia1[0]
            </h3>
        </div>
        <div class="col-md-8 text-center table-bordered">
            <h2><strong>@ViewBag.Fecha</strong></h2>
        </div>
        <div class="col-md-2 text-center">
            <h3>
                @ViewBag.dia2[0]
                @Html.ActionLink(" ", "Hoy", "Temas", new { @Fecha = ViewBag.fecha2.Year + "-" + ViewBag.fecha2.Month + "-" + ViewBag.fecha2.Day }, new { @class = "glyphicon glyphicon-forward" })
            </h3>
        </div>
    </div>


    <div class="container row text-center table-bordered">
        <div class="col-md-3 text-center">Total Ingreso</div>
        <div class="col-md-3 table-bordered">Total Presupuesto</div>
        <div class="col-md-3 text-center table-bordered">Total Pagos</div>
        <div class="col-md-3">Total Compras</div>
    </div>
    <div class="container row text-center table-bordered">
        <div class="col-md-3 text-center">
            @{
                try
                {
                    @(string.Format("{0:C}", ViewBag.totIngreso))
                }
                catch
                {
                    @("$0");
                }
            }
        </div>
        <div class="col-md-3 text-center table-bordered">
            @{
                try
                {
                    @(string.Format("{0:C}", ViewBag.totPresupuesto))
                }
                catch
                {
                    @("$0");
                }
            }
        </div>
        <div class="col-md-3 text-center table-bordered">
            @{
                try
                {
                    @(string.Format("{0:C}", ViewBag.totPagos))
                }
                catch
                {
                    @("$0")
                }
            }
        </div>
        <div class="col-md-3">
            @{
                try
                {
                    @(string.Format("{0:C}", ViewBag.totCompras))
                }
                catch
                {
                    @("$0")
                }

            }
        </div>
    </div>

    <div class="container">
        <table class="table table-striped">
            <tr>
                <th class="regular">
                    IT
                </th>
                <th class="active">
                    Hora
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Descripcion)
                </th>
                <th>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.Verificado)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.Notas)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.VerificaFechaHora)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.Ingreso)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.Presupuesto)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.Compras)
                    </div>
                    <div class="row">
                        @Html.DisplayNameFor(model => model.Pagos)
                    </div>
                </th>
                <th></th>
            </tr>
            @{var Minut = "0"; }
            @foreach (var item in Model)
            {
                i += 1;
                Minut = item.FechaHora.Value.Minute.ToString();
                if (Minut == "0") { Minut = "00"; } 
               <tr>
                <td class="regular text-center"> 
                    <br />
                    <br />
                    <div id="@i">
                        <strong>@i)</strong>
                    </div>
                </td>

                <td class="active regular">
                    <strong>@Html.DisplayFor(modelItem => item.FechaHora.Value.Hour):@Minut</strong>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @{
                    string veriClass = item.Verificado.Equals(true) ? "onSale" : "regular";
                    }
                    <div class="@veriClass">
                        <div class="row">
                            @Html.LabelFor(modelItem => item.Verificado) :
                            @Html.CheckBoxFor(modelItem => item.Verificado.HasValue, new { @class = "form-control" })
                        </div>
                            @using (Html.BeginForm("Ok", "Temas", FormMethod.Get))
                            {

                        <div class="row">
                            <textarea cols="30" data-val="true" data-val-length-max="2000" id="Notas" name="Notas" rows="2">@item.Notas</textarea>
                        </div>
                                <div class="row">
                                    @Html.DisplayFor(modelItem => item.VerificaFechaHora)
                                </div>
                                <div class="row">
                                    <strong>
                                        @{
                                    try
                                    {
                                        if (!String.IsNullOrEmpty(item.Ingreso.ToString()))
                                        {
                                                        @("Ingreso:") @Html.DisplayFor(modelItem => item.Ingreso)
                                    }
                                    }
                                    catch
                                    {
                                                        @("$0")
                                    }
                                        }
                                    </strong>
                                </div>

                                <div class="row">
                                    <strong>
                                        @{
                                    try
                                    {
                                        if (!String.IsNullOrEmpty(item.Presupuesto.ToString()))
                                        {
                                                        @("Presupuesto:") @Html.DisplayFor(modelItem => item.Presupuesto);
                                    }

                                    }
                                    catch
                                    {
                                                        @("$0")
                                    }
                                                    }
                                    </strong>
                                </div>

                                <div class="row">
                                    <strong>

                                        @{
                                    try
                                    {


                                        if (!String.IsNullOrEmpty(item.Compras.ToString()))
                                        {
                                            @("Compras:") @Html.DisplayFor(modelItem => item.Compras)
                                    }
                                    }
                                    catch
                                    {
                                                        @("$0")
                                    }
                                        }
                                    </strong>
                                </div>



                                <div class="row">
                                    <strong>
                                        @{
                                    try
                                    {

                                        if (!String.IsNullOrEmpty(item.Pagos.ToString()))
                                        {
                                            @("Pagos:") @Html.DisplayFor(modelItem => item.Pagos)
                                    }
                                    }
                                    catch
                                    {
                                                        @("$0")
                                    }
                                        }
                                    </strong>
                                </div>

                <td>

                    @if (!item.Verificado.Equals(true))
    {
                <input type="hidden" name="Id" id="Id" value="@item.Id" />
                <input type="hidden" name="IdPrioridad" id="IdPrioridad" value="@item.IdPrioridad" />
                <input type="hidden" name="temad" id="temad" value="@item.Descripcion" />
                <input type="hidden" name="IdContacto" id="IdContacto" value="@item.IdContacto" />
                <input type="hidden" name="IdUsuario" id="IdUsuario" value="@item.IdUsuario" />
                <input type="hidden" name="vieneIt" id="vieneIt" value="@i" />
                <input type="hidden" name="viene" id="viene" value="Hoy" />
                @Html.ActionLink(" ", "NextDay", "Temas", new { id = item.Id, @fecha = ViewBag.fechaC }, new { @class = "btn btn-danger glyphicon glyphicon-forward" })
                if (item.IdContacto != item.IdUsuario)
                {
                                <button type="submit" id="submit" name="submit" value="Ok2" class="btn glyphicon glyphicon-envelope"></button>
                }
                                <button type="submit" id="submit" name="submit" value="Ok" class="btn btn-success glyphicon glyphicon-ok"></button>
                }
                                    @Html.ActionLink(" ", "Edit", new { id = item.Id, Fecha = ViewBag.FechaC, vieneIt = i, viene = "Hoy" }, new { @class = "btn btn-success glyphicon glyphicon-pencil" })
                                    @if (!item.Verificado.Equals(true))
                    {
                                @Html.ActionLink(" ", "Delete", new { id = item.Id }, new { @class = "btn btn-danger glyphicon glyphicon-remove" })
                }
                </td>
                            }
                        </tr>
                    }

        </table>

    </div>
</div>
